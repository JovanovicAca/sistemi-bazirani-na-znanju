package com.example.EuroTraveler;
import com.example.EuroTraveler.facts.Enums.Distance;
import com.example.EuroTraveler.facts.Query;
import com.example.EuroTraveler.facts.DTO.ResultDTO;


rule "SHORT Distance"
    when
    	$result : ResultDTO ( distance == null)
        $query: Query( maximumDistance <= 150)
    then
        modify($result){
            setDistance(Distance.SHORT)}
            update($result)
        System.out.println("*RULE FIRED* Trip distance set to LOW");
end

rule "SHORT_MEDIUM Distance"
	when
    	$result : ResultDTO ( distance == null)
        $query: Query( maximumDistance <= 300 && maximumDistance > 150)
    then
        modify($result){
            setDistance(Distance.SHORT_MEDIUM)}
            update($result)
        System.out.println("*RULE FIRED* Trip distance set to SHORT_MEDIUM");
end

rule "MEDIUM Distance"
	when
    	$result : ResultDTO ( distance == null)
        $query: Query( maximumDistance <= 500 && maximumDistance > 300)
    then
        modify($result){
            setDistance(Distance.MEDIUM)}
            update($result)
        System.out.println("*RULE FIRED* Trip distance set to MEDIUM");
end


rule "MEDIUM_LONG Distance"
	when
    	$result : ResultDTO ( distance == null)
        $query: Query( maximumDistance <= 1000 && maximumDistance > 500)
    then
        modify($result){
            setDistance(Distance.MEDIUM_LONG)}
            update($result)
        System.out.println("*RULE FIRED* Trip distance set to MEDIUM_LONG");
end


rule "LONG Distance"
	when
    	$result : ResultDTO ( distance == null)
        $query: Query( maximumDistance > 1000)
    then
        modify($result){
            setDistance(Distance.LONG)}
            update($result)
        System.out.println("*RULE FIRED* Trip distance set to LONG");
end